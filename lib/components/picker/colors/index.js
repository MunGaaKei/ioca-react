import{jsx as e,jsxs as o,Fragment as l}from"react/jsx-runtime";import a from"@rc-component/color-picker";import"@rc-component/color-picker/assets/index.css";import{useReactive as n}from"ahooks";import{useEffect as r}from"react";import i from"../../popup/popup.js";import t,{ColorMethods as p}from"./footer.js";import s from"./handle.js";function c(c){const{value:u,type:h="HEX",disabledAlpha:m,children:d,usePanel:v,handle:b="both",placeholder:y="Colors",popupProps:f,onChange:g}=c,C=n({type:h,value:u,syncValue:u,visible:f?.visible}),V=e=>{const o=p[e];C.type=e,C.value=C.syncValue[o]?.()},k=e=>{C.value=e,C.syncValue=e},j=()=>{g?.(C.value),C.visible=!1};return r((()=>{C.syncValue=u,C.value=u}),[u]),v?e(a,{...c}):e(i,{trigger:"click",touchable:!0,position:"bottom",...f,visible:C.visible,content:e(a,{value:C.syncValue,disabledAlpha:m,panelRender:a=>o(l,{children:[a,e(t,{value:C.value,type:C.type,onTypeChange:V,onChange:k,onOk:j})]}),onChange:e=>{C.syncValue=e},onChangeComplete:e=>{const o=p[C.type];1!==e.a&&(e.a=parseFloat(e.a.toFixed(3))),C.value=e[o]?.()}}),onVisibleChange:e=>{C.visible=e,f?.onVisibleChange?.(e)},children:d??e(s,{color:u,handle:b,placeholder:y})})}export{c as default};
//# sourceMappingURL=index.js.map
