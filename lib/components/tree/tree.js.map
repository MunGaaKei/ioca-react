{"version":3,"file":"tree.js","sources":["../../../packages/components/tree/tree.tsx"],"sourcesContent":["import { useReactive } from \"ahooks\";\nimport { useEffect, useImperativeHandle } from \"react\";\nimport \"./index.css\";\nimport { TreeList } from \"./item\";\nimport { ITree, ITreeItem } from \"./type\";\n\nconst defaultNodeProps = {\n\tkey: \"key\",\n\ttitle: \"title\",\n\tchildren: \"children\",\n};\n\nconst Tree = (props: ITree) => {\n\tconst {\n\t\tdata = [],\n\t\tref,\n\t\tselected,\n\t\tchecked = [],\n\t\tdisabledRelated,\n\t\tnodeProps,\n\t\tonItemSelect,\n\t\tonItemCheck,\n\t\t...restProps\n\t} = props;\n\tconst state = useReactive({\n\t\tselected,\n\t\tchecked,\n\t\tpartofs: {} as Record<string, boolean>,\n\t\tnodeMaps: new Map(),\n\t});\n\tconst oNodeProps = Object.assign({}, defaultNodeProps, nodeProps);\n\n\tconst isChecked = (key?: string) => state.checked.includes(key || \"\");\n\n\tconst checkItem = (\n\t\titem: ITreeItem,\n\t\tchecked: boolean,\n\t\tdirection?: \"root\" | \"leaf\"\n\t) => {\n\t\tconst { key = \"\", parent, children } = item;\n\t\tconst shouldChanged = { [key]: checked };\n\t\tconst partofs = { [key]: false };\n\n\t\tif (disabledRelated) return [shouldChanged];\n\n\t\tif (checked) {\n\t\t\tif (parent && direction !== \"leaf\") {\n\t\t\t\tconst hasUnchecked = parent.children?.some(\n\t\t\t\t\t(o) => o.key !== key && !isChecked(o.key)\n\t\t\t\t);\n\n\t\t\t\tconst [changes, parts] = checkItem(parent, true, \"root\");\n\n\t\t\t\tif (!hasUnchecked) {\n\t\t\t\t\tObject.assign(shouldChanged, changes);\n\t\t\t\t}\n\n\t\t\t\tObject.assign(partofs, hasUnchecked ? parts : {}, {\n\t\t\t\t\t[parent.key as string]: true,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (children?.length && direction !== \"root\") {\n\t\t\t\tchildren.map((o) => {\n\t\t\t\t\tif (isChecked(o.key)) return;\n\n\t\t\t\t\tconst [changes] = checkItem(o, true, \"leaf\");\n\n\t\t\t\t\tObject.assign(shouldChanged, changes);\n\t\t\t\t\tpartofs[o.key as string] = false;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn [shouldChanged, partofs];\n\t\t}\n\n\t\tif (parent && direction !== \"leaf\") {\n\t\t\tconst [changes, parts] = checkItem(parent, false, \"root\");\n\n\t\t\tObject.assign(shouldChanged, changes);\n\n\t\t\tconst hasChecked = parent.children?.some(\n\t\t\t\t(o) => isChecked(o.key) && o.key !== key\n\t\t\t);\n\n\t\t\tObject.assign(partofs, hasChecked ? {} : parts, {\n\t\t\t\t[parent.key as string]: hasChecked,\n\t\t\t\t[key]: false,\n\t\t\t});\n\t\t}\n\t\tif (children?.length && direction !== \"root\") {\n\t\t\tchildren.map((o) => {\n\t\t\t\tconst [changes] = checkItem(o, false, \"leaf\");\n\n\t\t\t\tif (!isChecked(o.key)) return;\n\n\t\t\t\tObject.assign(shouldChanged, changes);\n\t\t\t\tpartofs[o.key as string] = false;\n\t\t\t});\n\t\t}\n\n\t\treturn [shouldChanged, partofs];\n\t};\n\n\tconst handleCheck = (item: ITreeItem, checked: boolean) => {\n\t\tconst [shouldChanged, partofs] = checkItem(item, checked);\n\t\tconst changedKeys = Object.keys(shouldChanged);\n\n\t\tstate.checked = checked\n\t\t\t? Array.from(new Set([...state.checked, ...changedKeys]))\n\t\t\t: state.checked.filter((k) => !changedKeys.includes(k));\n\n\t\tObject.assign(state.partofs, partofs);\n\n\t\tonItemCheck?.(item, checked, state.checked);\n\t};\n\n\tconst handleSelect = (key: string, item: ITreeItem) => {\n\t\tif (!props.selectable) return;\n\n\t\tstate.selected = key;\n\t\tonItemSelect?.(key, item);\n\t};\n\n\tuseEffect(() => {\n\t\tif (selected === undefined) return;\n\n\t\tstate.selected = selected;\n\t}, [selected]);\n\n\tuseEffect(() => {\n\t\tstate.nodeMaps.clear();\n\n\t\tconst { key, children } = oNodeProps;\n\t\tconst recursive = (nodes) => {\n\t\t\tnodes.map((o) => {\n\t\t\t\tstate.nodeMaps.set(o[key], o);\n\n\t\t\t\to[children]?.length > 0 && recursive(o[children]);\n\t\t\t});\n\t\t};\n\n\t\trecursive(data);\n\t}, [data]);\n\n\tuseImperativeHandle(ref, () => {\n\t\treturn {\n\t\t\tgetChecked: () => {\n\t\t\t\tconst items: ITreeItem[] = [];\n\t\t\t\tstate.checked.map((k) => {\n\t\t\t\t\tconst item = state.nodeMaps.get(k);\n\t\t\t\t\titems.push(item);\n\t\t\t\t});\n\t\t\t\treturn [state.checked, items];\n\t\t\t},\n\t\t\tgetSelected: () => {\n\t\t\t\tconst item = state.nodeMaps.get(state.selected);\n\t\t\t\treturn [state.selected, item];\n\t\t\t},\n\t\t\tgetPartofs: () => {\n\t\t\t\tconst items: ITreeItem[] = [];\n\t\t\t\tconst keys = Object.keys(state.partofs).filter((k) => {\n\t\t\t\t\tconst indeterminate = state.partofs[k];\n\n\t\t\t\t\tif (indeterminate) {\n\t\t\t\t\t\tconst item = state.nodeMaps.get(k);\n\t\t\t\t\t\titems.push(item);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn indeterminate;\n\t\t\t\t});\n\n\t\t\t\treturn [keys, items];\n\t\t\t},\n\t\t};\n\t});\n\n\treturn (\n\t\t<TreeList\n\t\t\tdata={data}\n\t\t\tselected={state.selected}\n\t\t\tchecked={state.checked}\n\t\t\tpartofs={state.partofs}\n\t\t\tnodeProps={oNodeProps}\n\t\t\tonItemCheck={handleCheck}\n\t\t\tonItemSelect={handleSelect}\n\t\t\t{...restProps}\n\t\t/>\n\t);\n};\n\nexport default Tree;\n"],"names":["defaultNodeProps","key","title","children","Tree","props","data","ref","selected","checked","disabledRelated","nodeProps","onItemSelect","onItemCheck","restProps","state","useReactive","partofs","nodeMaps","Map","oNodeProps","Object","assign","isChecked","includes","checkItem","item","direction","parent","shouldChanged","hasUnchecked","some","o","changes","parts","length","map","hasChecked","useEffect","undefined","clear","recursive","nodes","set","useImperativeHandle","getChecked","items","k","get","push","getSelected","getPartofs","keys","filter","indeterminate","_jsx","TreeList","changedKeys","Array","from","Set","selectable"],"mappings":"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"}