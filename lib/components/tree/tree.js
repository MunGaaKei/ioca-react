import{jsx as e}from"react/jsx-runtime";import{useReactive as t}from"ahooks";import{useEffect as c,useImperativeHandle as s}from"react";import{TreeList as n}from"./item.js";const o={key:"key",title:"title",children:"children"},r=r=>{const{data:a=[],ref:d,selected:l,checked:i=[],disabledRelated:k,nodeProps:p,onItemSelect:f,onItemCheck:h,...m}=r,g=t({selected:l,checked:i,partofs:{},nodeMaps:new Map}),y=Object.assign({},o,p),u=e=>g.checked.includes(e||""),b=(e,t,c)=>{const{key:s="",parent:n,children:o}=e,r={[s]:t},a={[s]:!1};if(k)return[r];if(t){if(n&&"leaf"!==c){const e=n.children?.some((e=>e.key!==s&&!u(e.key))),[t,c]=b(n,!0,"root");e||Object.assign(r,t),Object.assign(a,e?c:{},{[n.key]:!0})}return o?.length&&"root"!==c&&o.map((e=>{if(u(e.key))return;const[t]=b(e,!0,"leaf");Object.assign(r,t),a[e.key]=!1})),[r,a]}if(n&&"leaf"!==c){const[e,t]=b(n,!1,"root");Object.assign(r,e);const c=n.children?.some((e=>u(e.key)&&e.key!==s));Object.assign(a,c?{}:t,{[n.key]:c,[s]:!1})}return o?.length&&"root"!==c&&o.map((e=>{const[t]=b(e,!1,"leaf");u(e.key)&&(Object.assign(r,t),a[e.key]=!1)})),[r,a]};return c((()=>{void 0!==l&&(g.selected=l)}),[l]),c((()=>{g.nodeMaps.clear();const{key:e,children:t}=y,c=s=>{s.map((s=>{g.nodeMaps.set(s[e],s),s[t]?.length>0&&c(s[t])}))};c(a)}),[a]),s(d,(()=>({getChecked:()=>{const e=[];return g.checked.map((t=>{const c=g.nodeMaps.get(t);e.push(c)})),[g.checked,e]},getSelected:()=>{const e=g.nodeMaps.get(g.selected);return[g.selected,e]},getPartofs:()=>{const e=[];return[Object.keys(g.partofs).filter((t=>{const c=g.partofs[t];if(c){const c=g.nodeMaps.get(t);e.push(c)}return c})),e]}}))),e(n,{data:a,selected:g.selected,checked:g.checked,partofs:g.partofs,nodeProps:y,onItemCheck:(e,t)=>{const[c,s]=b(e,t),n=Object.keys(c);g.checked=t?Array.from(new Set([...g.checked,...n])):g.checked.filter((e=>!n.includes(e))),Object.assign(g.partofs,s),h?.(e,t,g.checked)},onItemSelect:(e,t)=>{r.selectable&&(g.selected=e,f?.(e,t))},...m})};export{r as default};
//# sourceMappingURL=tree.js.map
