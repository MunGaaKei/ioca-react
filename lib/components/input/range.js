import{jsx as e,jsxs as a}from"react/jsx-runtime";import{formatNumber as i,clamp as l}from"../../js/utils.js";import{MinusRound as n,PlusRound as t,SyncAltRound as r}from"@ricons/material";import{useReactive as o}from"ahooks";import s from"classnames";import{useEffect as p}from"react";import c from"../utils/helpericon/helpericon.js";import u from"./container.js";const m=m=>{const{label:v,name:d,value:h=m.initValue??"",initValue:f,labelInline:g,min:y=-1/0,max:C=1/0,type:b,className:k,status:N="normal",message:j,tip:A,append:x,prepend:D,step:I=1,thousand:P,precision:V,hideControl:B,placeholder:$,border:q,onChange:w,onBlur:z,style:E,...F}=m,G=o({value:h}),H=e=>e?"number"!=typeof e&&P?e.replaceAll(P,""):e:"",J=(e,a)=>{const{value:i}=e.target,l=H(i.replace(/[^\d\.-]/g,"")),n=Array.isArray(G.value)?G.value:[];n[a]=+l,G.value=n,w?.(n,e)},K=(e,a,n)=>{e.preventDefault(),e.stopPropagation();const t=Array.isArray(G.value)?G.value:[],r=H(t[n])??0,o=l(+r+a,y,C);t[n]=(e=>i(e,{precision:V,thousand:P}))(o),G.value=t,w?.(t,e)};p((()=>{G.value=h}),[h]);const L={name:d,className:"i-input i-input-number",...F};return e(u,{label:v,labelInline:g,className:k,style:E,tip:j??A,status:N,children:a("div",{className:s("i-input-item",{[`i-input-${N}`]:"normal"!==N,"i-input-borderless":!q}),children:[D&&e("div",{className:"i-input-prepend",children:D}),!B&&e(c,{active:!0,icon:e(n,{}),onClick:e=>K(e,-I,0)}),e("input",{value:G.value?.[0]||"",placeholder:$?.[0],...L,onChange:e=>J(e,0)}),!B&&e(c,{active:!0,icon:e(t,{}),onClick:e=>K(e,I,0)}),e(c,{active:!0,icon:e(r,{}),style:{margin:0},onClick:e=>{e.preventDefault(),e.stopPropagation();const a=G.value?G.value:[],i=a[0];a[0]=a[1],a[1]=i,G.value=a,w?.(a)}}),!B&&e(c,{active:!0,icon:e(n,{}),onClick:e=>K(e,-I,1)}),e("input",{value:G.value?.[1]||"",placeholder:$?.[1],...L,onChange:e=>J(e,1)}),!B&&e(c,{active:!0,icon:e(t,{}),onClick:e=>K(e,I,1)}),x&&e("div",{className:"i-input-append",children:x})]})})};export{m as default};
//# sourceMappingURL=range.js.map
