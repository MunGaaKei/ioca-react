{"version":3,"file":"textarea.js","sources":["../../../packages/components/input/textarea.tsx"],"sourcesContent":["import { useReactive } from \"ahooks\";\nimport classNames from \"classnames\";\nimport { ChangeEvent, useEffect, useRef } from \"react\";\nimport \"../../css/input.css\";\nimport InputContainer from \"./container\";\nimport type { ITextarea } from \"./type\";\n\nconst Textarea = (props: ITextarea) => {\n\tconst {\n\t\tref,\n\t\tlabel,\n\t\tname,\n\t\tvalue = props.initValue,\n\t\tinitValue,\n\t\tlabelInline,\n\t\tclassName,\n\t\tstatus = \"normal\",\n\t\tmessage,\n\t\ttip,\n\t\tautoSize,\n\t\tborder,\n\t\tstyle,\n\t\tonChange,\n\t\tonEnter,\n\t\t...restProps\n\t} = props;\n\n\tconst state = useReactive({\n\t\tvalue,\n\t});\n\tconst refTextarea = useRef<HTMLDivElement>(null);\n\n\tconst handleChange = (\n\t\te: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n\t) => {\n\t\tconst v = e.target.value;\n\n\t\tstate.value = v;\n\n\t\tconst ta = refTextarea.current?.firstChild as HTMLElement;\n\t\tif (autoSize && ta) {\n\t\t\tta.style.height = `${ta.scrollHeight}px`;\n\t\t}\n\n\t\tonChange?.(v, e);\n\t};\n\n\tconst handleKeydown = (e) => {\n\t\tif (e.code !== \"Enter\") return;\n\n\t\te.stopPropagation();\n\t\tonEnter?.(e);\n\t};\n\n\tuseEffect(() => {\n\t\tstate.value = value;\n\t}, [value]);\n\n\tconst inputProps = {\n\t\tref,\n\t\tname,\n\t\tvalue: state.value,\n\t\tclassName: \"i-input i-textarea\",\n\t\tonChange: handleChange,\n\t\tonKeyDown: handleKeydown,\n\t\t...restProps,\n\t};\n\n\treturn (\n\t\t<InputContainer\n\t\t\tlabel={label}\n\t\t\tlabelInline={labelInline}\n\t\t\tclassName={className}\n\t\t\tstyle={style}\n\t\t\ttip={message ?? tip}\n\t\t\tstatus={status}\n\t\t>\n\t\t\t<div\n\t\t\t\tref={refTextarea}\n\t\t\t\tclassName={classNames(\"i-input-item\", {\n\t\t\t\t\t[`i-input-${status}`]: status !== \"normal\",\n\t\t\t\t\t\"i-input-borderless\": !border,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<textarea {...inputProps} />\n\t\t\t</div>\n\t\t</InputContainer>\n\t);\n};\n\nexport default Textarea;\n"],"names":["Textarea","props","ref","label","name","value","initValue","labelInline","className","status","message","tip","autoSize","border","style","onChange","onEnter","restProps","state","useReactive","refTextarea","useRef","useEffect","inputProps","e","v","target","ta","current","firstChild","height","scrollHeight","onKeyDown","code","stopPropagation","_jsx","InputContainer","children","classNames"],"mappings":"mLAOA,MAAMA,EAAYC,IACjB,MAAMC,IACLA,EAAGC,MACHA,EAAKC,KACLA,EAAIC,MACJA,EAAQJ,EAAMK,UAASA,UACvBA,EAASC,YACTA,EAAWC,UACXA,EAASC,OACTA,EAAS,SAAQC,QACjBA,EAAOC,IACPA,EAAGC,SACHA,EAAQC,OACRA,EAAMC,MACNA,EAAKC,SACLA,EAAQC,QACRA,KACGC,GACAhB,EAEEiB,EAAQC,EAAY,CACzBd,UAEKe,EAAcC,EAAuB,MAwB3CC,GAAU,KACTJ,EAAMb,MAAQA,CAAK,GACjB,CAACA,IAEJ,MAAMkB,EAAa,CAClBrB,MACAE,OACAC,MAAOa,EAAMb,MACbG,UAAW,qBACXO,SA9BAS,IAEA,MAAMC,EAAID,EAAEE,OAAOrB,MAEnBa,EAAMb,MAAQoB,EAEd,MAAME,EAAKP,EAAYQ,SAASC,WAC5BjB,GAAYe,IACfA,EAAGb,MAAMgB,OAAS,GAAGH,EAAGI,kBAGzBhB,IAAWU,EAAGD,EAAE,EAoBhBQ,UAjBsBR,IACP,UAAXA,EAAES,OAENT,EAAEU,kBACFlB,IAAUQ,GAAE,KAcTP,GAGJ,OACCkB,EAACC,GACAjC,MAAOA,EACPI,YAAaA,EACbC,UAAWA,EACXM,MAAOA,EACPH,IAAKD,GAAWC,EAChBF,OAAQA,EAER4B,SAAAF,EAAA,MAAA,CACCjC,IAAKkB,EACLZ,UAAW8B,EAAW,eAAgB,CACrC,CAAC,WAAW7B,KAAsB,WAAXA,EACvB,sBAAuBI,aAGxBsB,EAAc,WAAA,IAAAZ,OAEC"}