import{useReactive as e}from"ahooks";import s from"pubsub-js";import{useContext as a,useMemo as t,Children as r,isValidElement as u,cloneElement as i,useEffect as n}from"react";import o from"./context.js";function m(m){const{name:d,required:l,children:c}=m,p=e({value:void 0,status:"normal",message:void 0,update:0}),b=a(o),{id:v}=b,g=t((()=>r.map(c,(e=>{if(!u(e))return null;const{onChange:a}=e.props,{value:t,status:r,message:n}=p;return i(e,{value:t,status:r,message:n,required:l,onChange:(...e)=>{var t;t=e[0],d&&(b.set(d,t),s.publish(`${v}:change`,{name:d,value:t})),a?.(...e),Object.assign(p,{status:"normal",message:void 0})}})}))),[c,p.update]);return n((()=>{if(d)return s.subscribe(`${v}:set:${d}`,((e,s)=>{p.value=s,p.update+=1})),s.subscribe(`${v}:invalid:${d}`,((e,s)=>{Object.assign(p,s),p.update+=1})),Promise.resolve().then((()=>{b.set(d,b.cacheData[d]??void 0)})),()=>{s.unsubscribe(`${v}:set:${d}`),s.unsubscribe(`${v}:invalid:${d}`),b.delete(d)}}),[d,c]),d?g:c}export{m as default};
//# sourceMappingURL=field.js.map
