{"version":3,"file":"form.js","sources":["../../../packages/components/form/form.tsx"],"sourcesContent":["import classNames from \"classnames\";\nimport PubSub from \"pubsub-js\";\nimport { CSSProperties, useEffect, useMemo } from \"react\";\nimport Context from \"./context\";\nimport Field from \"./field\";\nimport \"./index.css\";\nimport { IForm } from \"./type\";\nimport useForm, { IFormInstance } from \"./useForm\";\n\nconst Form = (props: IForm) => {\n\tconst {\n\t\tform = {} as IFormInstance,\n\t\trules,\n\t\tinitialValues,\n\t\tstyle,\n\t\tclassName,\n\t\twidth,\n\t\tcolumns = 1,\n\t\tgap = \"1em\",\n\t\tlabelInline,\n\t\tlabelWidth,\n\t\tlabelRight,\n\t\tchildren,\n\t\tonKeyDown,\n\t\tonEnter,\n\t\tonChange,\n\t\t...restProps\n\t} = props;\n\n\tconst handleKeyDown = (e) => {\n\t\tonKeyDown?.(e);\n\n\t\tif (e.keyCode !== 13) return;\n\n\t\tonEnter?.(form.data, form);\n\t};\n\n\tconst gridColumns = useMemo(() => {\n\t\tif (!columns) return;\n\n\t\tif (typeof columns === \"number\")\n\t\t\treturn `minmax(0, 1fr) `.repeat(columns);\n\n\t\treturn columns;\n\t}, [columns]);\n\n\tuseEffect(() => {\n\t\tObject.assign(form, {\n\t\t\tdata: { ...initialValues },\n\t\t\trules,\n\t\t});\n\t}, [form]);\n\n\tuseEffect(() => {\n\t\tPubSub.subscribe(`${form.id}:change`, (evt, v) => {\n\t\t\tonChange?.(v.name, v.value);\n\t\t});\n\n\t\treturn () => {\n\t\t\tPubSub.unsubscribe(`${form.id}:change`);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<Context value={form}>\n\t\t\t<form\n\t\t\t\tstyle={\n\t\t\t\t\t{\n\t\t\t\t\t\t...style,\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\tgap,\n\t\t\t\t\t\tgridTemplateColumns: gridColumns as any,\n\t\t\t\t\t\t\"--label-width\": labelWidth,\n\t\t\t\t\t\t\"--label-align\": labelRight ? \"right\" : undefined,\n\t\t\t\t\t} as CSSProperties\n\t\t\t\t}\n\t\t\t\tclassName={classNames(\"i-form\", className, {\n\t\t\t\t\t\"i-form-inline\": labelInline,\n\t\t\t\t})}\n\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t{...restProps}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</form>\n\t\t</Context>\n\t);\n};\n\nForm.useForm = useForm;\nForm.Field = Field;\n\nexport default Form;\n"],"names":["Form","props","form","rules","initialValues","style","className","width","columns","gap","labelInline","labelWidth","labelRight","children","onKeyDown","onEnter","onChange","restProps","gridColumns","useMemo","repeat","useEffect","Object","assign","data","PubSub","subscribe","id","evt","v","name","value","unsubscribe","_jsx","Context","gridTemplateColumns","undefined","classNames","e","keyCode","useForm","Field"],"mappings":"4NASA,MAAMA,EAAQC,IACb,MAAMC,KACLA,EAAO,CAAmB,EAAAC,MAC1BA,EAAKC,cACLA,EAAaC,MACbA,EAAKC,UACLA,EAASC,MACTA,EAAKC,QACLA,EAAU,EAACC,IACXA,EAAM,MAAKC,YACXA,EAAWC,WACXA,EAAUC,WACVA,EAAUC,SACVA,EAAQC,UACRA,EAASC,QACTA,EAAOC,SACPA,KACGC,GACAhB,EAUEiB,EAAcC,GAAQ,KAC3B,GAAKX,EAEL,MAAuB,iBAAZA,EACH,kBAAkBY,OAAOZ,GAE1BA,CAAO,GACZ,CAACA,IAmBJ,OAjBAa,GAAU,KACTC,OAAOC,OAAOrB,EAAM,CACnBsB,KAAM,IAAKpB,GACXD,SACC,GACA,CAACD,IAEJmB,GAAU,KACTI,EAAOC,UAAU,GAAGxB,EAAKyB,aAAa,CAACC,EAAKC,KAC3Cb,IAAWa,EAAEC,KAAMD,EAAEE,MAAM,IAGrB,KACNN,EAAOO,YAAY,GAAG9B,EAAKyB,YAAY,IAEtC,IAGFM,EAACC,EAAQ,CAAAH,MAAO7B,EAAIW,SACnBoB,EACC,OAAA,CAAA5B,MACC,IACIA,EACHE,QACAE,MACA0B,oBAAqBjB,EACrB,gBAAiBP,EACjB,gBAAiBC,EAAa,aAAUwB,GAG1C9B,UAAW+B,EAAW,SAAU/B,EAAW,CAC1C,gBAAiBI,IAElBI,UAlDoBwB,IACtBxB,IAAYwB,GAEM,KAAdA,EAAEC,SAENxB,IAAUb,EAAKsB,KAAMtB,EAAK,KA8CpBe,EAASJ,SAEZA,KAEO,EAIZb,EAAKwC,QAAUA,EACfxC,EAAKyC,MAAQA"}