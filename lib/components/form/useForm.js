import t from"pubsub-js";import{uid as s}from"radash";import{useRef as a}from"react";class e{id;data={};cacheData={};rules={};constructor(){this.id=s(8),this.data={}}get(t){return t?this.data[t]:this.data}set(s,a){const e=this.id;if(this.data)return"string"==typeof s?(this.data[s]=a,this.cacheData[s]=a,void t.publish(`${e}:set:${s}`,a)):void Object.keys(s).map((a=>{this.data[a]=s[a],this.cacheData[a]=s[a],t.publish(`${e}:set:${a}`,s[a])}))}delete(t){delete this.data[t]}clear(){this.data&&(this.cacheData={},Object.keys(this.data).map((s=>{t.publish(`${this.id}:set:${s}`,void 0),this.data[s]=void 0})))}async validate(s){const{id:a,rules:e,data:i}=this;if(!e)return i;if(s){const r=e[s],n={validator:t=>Array.isArray(t)?t.length>0:![void 0,null,""].includes(t),message:void 0};"function"==typeof r?n.validator=r:!0===r?n.message="required":Object.assign(n,r);const d=n.validator?.(i[s],this);return d?(t.publish(`${a}:invalid:${name}`,{message:null,status:"normal"}),!0):(t.publish(`${a}:invalid:${s}`,{message:n.message,status:"error"}),!1)}let r=!0;return Object.keys(i).map((s=>{const n=e[s];if(void 0===n)return;const d={validator:t=>Array.isArray(t)?t.length>0:!!t,message:void 0};"function"==typeof n?d.validator=n:!0===n?d.message="required":Object.assign(d,n);const o=d.validator?.(i[s],this);o?t.publish(`${a}:invalid:${s}`,{message:null,status:"normal"}):(t.publish(`${a}:invalid:${s}`,{message:d.message,status:"error"}),r=!1)})),!!r&&Promise.resolve(i)}}function i(t){const s=a(null);return s.current||(s.current=t??new e),s.current}export{e as IFormInstance,i as default};
//# sourceMappingURL=useForm.js.map
