{"version":3,"file":"radio.js","sources":["../../../packages/components/radio/radio.tsx"],"sourcesContent":["import { useReactive } from \"ahooks\";\nimport classNames from \"classnames\";\nimport { useEffect, useMemo } from \"react\";\nimport \"../../css/input.css\";\nimport { formatOption } from \"../../js/utils\";\nimport \"./index.css\";\nimport RadioItem from \"./item\";\nimport { IRadio } from \"./type\";\n\nfunction Radio(props: IRadio) {\n\tconst {\n\t\tlabel,\n\t\tname,\n\t\toptions,\n\t\tvalue,\n\t\ttype = \"default\",\n\t\tstatus = \"normal\",\n\t\tmessage,\n\t\toptionInline = true,\n\t\tlabelInline,\n\t\tdisabled,\n\t\trequired,\n\t\tclassName,\n\t\trenderItem,\n\t\tonChange,\n\t} = props;\n\n\tconst state = useReactive({\n\t\tvalue,\n\t});\n\n\tconst formattedOptions = useMemo(() => formatOption(options), [options]);\n\n\tconst handleChange = (value, e) => {\n\t\tstate.value = value;\n\t\tonChange?.(value, e);\n\t};\n\n\tuseEffect(() => {\n\t\tstate.value = value;\n\t}, [value]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={classNames(\n\t\t\t\t\"i-radio i-input-label\",\n\t\t\t\t{\n\t\t\t\t\t[`i-radio-${status}`]: status !== \"normal\",\n\t\t\t\t\t\"i-input-inline\": labelInline,\n\t\t\t\t},\n\t\t\t\tclassName\n\t\t\t)}\n\t\t>\n\t\t\t{label && (\n\t\t\t\t<span className='i-input-label-text'>\n\t\t\t\t\t{required && <span className='error'>*</span>}\n\t\t\t\t\t{label}\n\n\t\t\t\t\t{message && <p className='i-radio-message'>{message}</p>}\n\t\t\t\t</span>\n\t\t\t)}\n\n\t\t\t<div\n\t\t\t\tclassName={classNames(\"i-radio-options\", {\n\t\t\t\t\t\"i-options-block\": !optionInline,\n\t\t\t\t\t\"i-radio-options-button\": type === \"button\",\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t{formattedOptions.map((option) => {\n\t\t\t\t\tconst checked = state.value === option.value;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<RadioItem\n\t\t\t\t\t\t\tkey={option.value as string}\n\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\tvalue={option.value}\n\t\t\t\t\t\t\tchecked={checked}\n\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\tdisabled={disabled || option.disabled}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{renderItem ?? option.label}\n\t\t\t\t\t\t</RadioItem>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nRadio.Item = RadioItem;\n\nexport default Radio;\n"],"names":["Radio","props","label","name","options","value","type","status","message","optionInline","labelInline","disabled","required","className","renderItem","onChange","state","useReactive","formattedOptions","useMemo","formatOption","handleChange","e","useEffect","_jsxs","classNames","children","_jsx","map","option","checked","RadioItem","Item"],"mappings":"0OASA,SAASA,EAAMC,GACd,MAAMC,MACLA,EAAKC,KACLA,EAAIC,QACJA,EAAOC,MACPA,EAAKC,KACLA,EAAO,UAASC,OAChBA,EAAS,SAAQC,QACjBA,EAAOC,aACPA,GAAe,EAAIC,YACnBA,EAAWC,SACXA,EAAQC,SACRA,EAAQC,UACRA,EAASC,WACTA,EAAUC,SACVA,GACGd,EAEEe,EAAQC,EAAY,CACzBZ,UAGKa,EAAmBC,GAAQ,IAAMC,EAAahB,IAAU,CAACA,IAEzDiB,EAAe,CAAChB,EAAOiB,KAC5BN,EAAMX,MAAQA,EACdU,IAAWV,EAAOiB,EAAE,EAOrB,OAJAC,GAAU,KACTP,EAAMX,MAAQA,CAAK,GACjB,CAACA,IAGHmB,EACC,MAAA,CAAAX,UAAWY,EACV,wBACA,CACC,CAAC,WAAWlB,KAAsB,WAAXA,EACvB,iBAAkBG,GAEnBG,GACAa,SAAA,CAEAxB,GACAsB,EAAM,OAAA,CAAAX,UAAU,+BACdD,GAAYe,UAAMd,UAAU,QAAgBa,SAAA,MAC5CxB,EAEAM,GAAWmB,EAAA,IAAA,CAAGd,UAAU,2BAAmBL,OAI9CmB,EACC,MAAA,CAAAd,UAAWY,EAAW,kBAAmB,CACxC,mBAAoBhB,EACpB,yBAAmC,WAATH,IACzBoB,SAEDR,EAAiBU,KAAKC,IACtB,MAAMC,EAAUd,EAAMX,QAAUwB,EAAOxB,MAEvC,OACCsB,EAACI,EAAS,CAET5B,KAAMA,EACNE,MAAOwB,EAAOxB,MACdyB,QAASA,EACTxB,KAAMA,EACNK,SAAUA,GAAYkB,EAAOlB,SAC7BI,SAAUM,EAAYK,SAErBZ,GAAce,EAAO3B,OARjB2B,EAAOxB,MASD,QAMlB,CAEAL,EAAMgC,KAAOD"}