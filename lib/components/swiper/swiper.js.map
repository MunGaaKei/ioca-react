{"version":3,"file":"swiper.js","sources":["../../../packages/components/swiper/swiper.tsx"],"sourcesContent":["import {\n\tKeyboardArrowLeftRound,\n\tKeyboardArrowRightRound,\n} from \"@ricons/material\";\nimport { useReactive } from \"ahooks\";\nimport classNames from \"classnames\";\nimport {\n\tChildren,\n\tuseEffect,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseRef,\n} from \"react\";\nimport { useMouseMove, useMouseUp } from \"../../js/hooks\";\nimport { clamp } from \"../../js/utils\";\nimport Icon from \"../icon\";\nimport \"./index.css\";\nimport Item from \"./item\";\nimport { CompositionSwiper, ISwiper } from \"./type\";\n\nconst Swiper = ((props: ISwiper) => {\n\tconst {\n\t\tref,\n\t\ttype = \"normal\",\n\t\tinitial = 0,\n\t\tdisplay = 1,\n\t\tscroll = 1,\n\t\tloop = true,\n\t\tvertical,\n\t\tprev = <Icon icon={<KeyboardArrowLeftRound />} size='2em' />,\n\t\tnext = <Icon icon={<KeyboardArrowRightRound />} size='2em' />,\n\t\tduration = 600,\n\t\tinterval = 3000,\n\t\tautoplay,\n\t\tpauseOnHover,\n\t\tarrow = true,\n\t\treverse,\n\t\tdraggable,\n\t\tdragOffset = 40,\n\t\tgap = 0,\n\t\titemHeight,\n\t\tindicator,\n\t\tfixedIndicator,\n\t\tstyle,\n\t\tclassName,\n\t\tchildren,\n\t\trenderIndicator,\n\t\tonBeforeSwipe,\n\t\tonAfterSwipe,\n\t\tonItemClick,\n\t} = props;\n\n\tconst listRef = useRef<HTMLDivElement>(null);\n\tconst timerRef = useRef<any>(null);\n\tconst transition = `all ${duration / 1000}s`;\n\tconst state = useReactive({\n\t\tcurrent: initial,\n\t\tswipable: true,\n\t\ttransition: type === \"fade\" ? \"none\" : transition,\n\t\tdragStart: 0,\n\t\tdragging: false,\n\t\tinitialized: false,\n\t});\n\n\tconst items = useMemo(() => {\n\t\treturn Children.map(children, (node: any) => {\n\t\t\tif (node.type !== Item) return;\n\n\t\t\treturn node;\n\t\t});\n\t}, [children]);\n\n\tconst [displayItems, extra, size, total, listSize] = useMemo(() => {\n\t\tconst extra =\n\t\t\ttype === \"normal\" && loop && items.length > display\n\t\t\t\t? display + 1\n\t\t\t\t: 0;\n\t\tlet list: any = [];\n\n\t\tif (extra <= 0) {\n\t\t\tlist = [...items];\n\t\t} else {\n\t\t\tconst head = items.slice(0, extra);\n\t\t\tconst tail = items.slice(-extra);\n\t\t\tlist = [...tail, ...items, ...head];\n\t\t}\n\n\t\tconst listSize = `${(list.length / display) * 100}%`;\n\n\t\treturn [list, extra, items.length, list.length, listSize];\n\t}, [display, loop, type, items]);\n\n\tconst offsetPercent = useMemo(\n\t\t() => (-100 * (state.current + extra)) / total,\n\t\t[state.current, total]\n\t);\n\n\tconst position = useMemo(() => {\n\t\tif (size <= display || type === \"fade\") return;\n\n\t\tconst offset = vertical\n\t\t\t? `0, ${offsetPercent}%`\n\t\t\t: `${offsetPercent}%, 0`;\n\t\treturn `translate3d(${offset}, 0)`;\n\t}, [offsetPercent, vertical, display, size, type]);\n\n\tconst trackStyle = useMemo(() => {\n\t\tif (!vertical || !itemHeight) return;\n\n\t\treturn {\n\t\t\theight: itemHeight * display,\n\t\t};\n\t}, [vertical, itemHeight, display]);\n\n\tconst indicatorsLoop = useMemo(() => {\n\t\treturn Array.from({\n\t\t\tlength: Math.ceil((size - display) / scroll) + 1,\n\t\t});\n\t}, [loop, indicator]);\n\n\tconst clearTimer = () => {\n\t\tclearTimeout(timerRef.current);\n\t\ttimerRef.current = null;\n\t};\n\n\tconst swipeTo = (i: number) => {\n\t\tif (!state.swipable || i === state.current) return;\n\t\tstate.swipable = false;\n\t\tonBeforeSwipe?.(state.current);\n\n\t\tlet reset = false;\n\t\tlet next = i;\n\t\tconst lastDisplay = size - display;\n\n\t\tif (loop) {\n\t\t\tif (i > lastDisplay) {\n\t\t\t\treset = true;\n\t\t\t\ti = size;\n\t\t\t\tnext = 0;\n\t\t\t} else if (i < 0) {\n\t\t\t\treset = true;\n\t\t\t\ti = -display;\n\t\t\t\tnext = lastDisplay;\n\t\t\t}\n\t\t} else {\n\t\t\tnext = clamp(next, 0, lastDisplay);\n\t\t\ti = next;\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tstate.swipable = true;\n\t\t}, duration + 32);\n\n\t\tif (type === \"fade\") {\n\t\t\tstate.current = next;\n\t\t\tonAfterSwipe?.(next);\n\t\t\treturn;\n\t\t}\n\n\t\tstate.current = i;\n\n\t\tif (!reset) {\n\t\t\tif (autoplay) {\n\t\t\t\ttimerRef.current = setTimeout(swipeNext, interval);\n\t\t\t}\n\t\t\tsetTimeout(() => {\n\t\t\t\tonAfterSwipe?.(next);\n\t\t\t}, duration + 12);\n\t\t\treturn;\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tstate.transition = \"none\";\n\t\t\tstate.current = next;\n\t\t\tonAfterSwipe?.(next);\n\t\t\tif (autoplay) {\n\t\t\t\ttimerRef.current = setTimeout(swipeNext, interval);\n\t\t\t}\n\t\t\tsetTimeout(() => {\n\t\t\t\tstate.transition = transition;\n\t\t\t}, 60);\n\t\t}, duration + 20);\n\t};\n\tconst swipeNext = () => {\n\t\tswipeTo(reverse ? state.current - scroll : state.current + scroll);\n\t};\n\n\tconst swipePrev = () => {\n\t\tswipeTo(reverse ? state.current + scroll : state.current - scroll);\n\t};\n\n\tconst handleMouseDown = (e) => {\n\t\tif (!draggable || !state.swipable || type === \"fade\") return;\n\t\te.stopPropagation();\n\t\te.preventDefault();\n\n\t\tif (e.touches) {\n\t\t\te = e.touches[0];\n\t\t}\n\n\t\tObject.assign(state, {\n\t\t\tdragStart: vertical ? e.clientY : e.clientX,\n\t\t\tdragging: true,\n\t\t\ttransition: \"none\",\n\t\t});\n\t};\n\n\tconst handleMouseMove = (e) => {\n\t\tif (!state.dragging || !listRef.current) return;\n\t\te.preventDefault();\n\n\t\tif (e.touches) {\n\t\t\te = e.touches[0];\n\t\t}\n\n\t\tconst dragEnd = vertical ? e.clientY : e.clientX;\n\t\tconst offset =\n\t\t\t((dragEnd - state.dragStart) * 61.8) /\n\t\t\t\tlistRef.current[vertical ? \"offsetHeight\" : \"offsetWidth\"] +\n\t\t\toffsetPercent;\n\n\t\tlistRef.current.style.transform = `translate3d(${\n\t\t\tvertical ? `0, ${offset}%` : `${offset}%, 0`\n\t\t}, 0)`;\n\t};\n\n\tconst handleMouseUp = (e) => {\n\t\tif (!state.dragging || !listRef.current) return;\n\n\t\tif (e.changedTouches) {\n\t\t\te = e.changedTouches[0];\n\t\t}\n\n\t\tconst dragEnd = vertical ? e.clientY : e.clientX;\n\t\tconst part =\n\t\t\tlistRef.current[vertical ? \"offsetHeight\" : \"offsetWidth\"] / total;\n\t\tconst offset = (dragEnd - state.dragStart) * 0.618;\n\t\tconst absOffset = Math.abs(offset);\n\n\t\tif (absOffset > dragOffset) {\n\t\t\tconst base = Math.floor(absOffset / part);\n\t\t\tconst mod = (absOffset % part) - dragOffset > 0 ? 1 : 0;\n\t\t\tconst p = base + mod;\n\n\t\t\tlet to = state.current + (offset > 0 ? -p : p);\n\n\t\t\tswipeTo(to);\n\t\t}\n\n\t\tlistRef.current.style.transform = position || \"\";\n\n\t\tObject.assign(state, {\n\t\t\tdragging: false,\n\t\t\ttransition,\n\t\t});\n\t};\n\n\tconst handleMouseOver = () => {\n\t\tif (!pauseOnHover) return;\n\t\tclearTimer();\n\t};\n\n\tconst handleMouseLeave = () => {\n\t\tif (!pauseOnHover) return;\n\t\tclearTimer();\n\t\ttimerRef.current = setTimeout(swipeNext, interval);\n\t};\n\n\tuseMouseMove(handleMouseMove);\n\tuseMouseUp(handleMouseUp);\n\n\tuseImperativeHandle(ref, () => ({\n\t\tswipeTo,\n\t\tswipeNext,\n\t\tswipePrev,\n\t}));\n\n\tuseEffect(() => {\n\t\tif (!autoplay) return;\n\t\ttimerRef.current = setTimeout(swipeNext, interval);\n\n\t\treturn () => {\n\t\t\tclearTimeout(timerRef.current);\n\t\t\ttimerRef.current = null;\n\t\t};\n\t}, [autoplay, interval]);\n\n\treturn (\n\t\t<div\n\t\t\tstyle={style}\n\t\t\tclassName={classNames(\n\t\t\t\t\"i-swiper\",\n\t\t\t\t{\n\t\t\t\t\t\"i-swiper-vertical\": vertical,\n\t\t\t\t\t\"i-swiper-initialized\": state.initialized,\n\t\t\t\t},\n\t\t\t\tclassName\n\t\t\t)}\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName='i-swiper-track'\n\t\t\t\tstyle={trackStyle}\n\t\t\t\tonMouseOver={handleMouseOver}\n\t\t\t\tonMouseLeave={handleMouseLeave}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tref={listRef}\n\t\t\t\t\tclassName={classNames(\"i-swiper-list\", {\n\t\t\t\t\t\t\"i-swiper-fade\": type === \"fade\",\n\t\t\t\t\t})}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t[vertical ? \"height\" : \"width\"]: listSize,\n\t\t\t\t\t\ttransform: position,\n\t\t\t\t\t\ttransition: state.transition,\n\t\t\t\t\t}}\n\t\t\t\t\tonMouseDown={handleMouseDown}\n\t\t\t\t\tonTouchStart={handleMouseDown}\n\t\t\t\t>\n\t\t\t\t\t{displayItems.map((item, i) => {\n\t\t\t\t\t\tconst { props: itemProps } = item;\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\tindex={i}\n\t\t\t\t\t\t\t\titemIndex={(i - extra + size) % size}\n\t\t\t\t\t\t\t\tactive={i - extra === state.current}\n\t\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\t\tgap={gap}\n\t\t\t\t\t\t\t\ttransition={transition}\n\t\t\t\t\t\t\t\titemHeight={itemHeight}\n\t\t\t\t\t\t\t\tvertical={vertical}\n\t\t\t\t\t\t\t\tonItemClick={onItemClick}\n\t\t\t\t\t\t\t\t{...itemProps}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\n\t\t\t\t{arrow && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{(loop || state.current !== 0) && (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tclassName='i-swiper-arrow i-swiper-prev'\n\t\t\t\t\t\t\t\tonClick={swipePrev}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{prev}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{(loop || state.current < size - display) && (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tclassName='i-swiper-arrow i-swiper-next'\n\t\t\t\t\t\t\t\tonClick={swipeNext}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{next}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{indicator && (\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames(\"i-swiper-indicators\", {\n\t\t\t\t\t\t\"i-swiper-indicators-fixed\": fixedIndicator,\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t{indicatorsLoop.map((_, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\tclassName={classNames(\"i-swiper-indicator\", {\n\t\t\t\t\t\t\t\t\t\"i-indicator-active\":\n\t\t\t\t\t\t\t\t\t\ti ===\n\t\t\t\t\t\t\t\t\t\tMath[loop ? \"floor\" : \"ceil\"](\n\t\t\t\t\t\t\t\t\t\t\t((state.current + size) % size) /\n\t\t\t\t\t\t\t\t\t\t\t\tscroll\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tonClick={() => swipeTo(i * scroll)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{renderIndicator?.(i)}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}) as CompositionSwiper;\n\nSwiper.Item = Item;\n\nexport default Swiper;\n"],"names":["Swiper","props","ref","type","initial","display","scroll","loop","vertical","prev","_jsx","Icon","icon","KeyboardArrowLeftRound","size","next","KeyboardArrowRightRound","duration","interval","autoplay","pauseOnHover","arrow","reverse","draggable","dragOffset","gap","itemHeight","indicator","fixedIndicator","style","className","children","renderIndicator","onBeforeSwipe","onAfterSwipe","onItemClick","listRef","useRef","timerRef","transition","state","useReactive","current","swipable","dragStart","dragging","initialized","items","useMemo","Children","map","node","Item","displayItems","extra","total","listSize","length","list","head","slice","offsetPercent","position","trackStyle","height","indicatorsLoop","Array","from","Math","ceil","clearTimer","clearTimeout","swipeTo","i","reset","lastDisplay","clamp","setTimeout","swipeNext","swipePrev","handleMouseDown","e","stopPropagation","preventDefault","touches","Object","assign","clientY","clientX","useMouseMove","offset","transform","useMouseUp","changedTouches","dragEnd","part","absOffset","abs","p","floor","to","useImperativeHandle","useEffect","_jsxs","classNames","onMouseOver","onMouseLeave","onMouseDown","onTouchStart","item","itemProps","index","itemIndex","active","_Fragment","onClick","_"],"mappings":"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"}