import{jsx as r,jsxs as o,Fragment as t}from"react/jsx-runtime";import{HideImageTwotone as s}from"@ricons/material";import{useReactive as e}from"ahooks";import i from"classnames";import{useRef as a,useEffect as c}from"react";import{useIntersectionObserver as n}from"../../js/hooks.js";import l from"../../js/usePreview/index.js";import m from"../icon/icon.js";import d from"../loading/loading.js";const u=u=>{const{src:f,round:g,size:p,initSize:v,lazyload:h,fallback:j=r(m,{icon:r(s,{}),size:"2em",className:"color-5"}),fit:b,style:k,className:y,cover:w,coverClass:z,usePreview:C,onLoad:N,onError:x,onClick:E,...A}=u,L=e({status:"loading"}),P=a(null),F=b?"100%":void 0,{observe:G,unobserve:I}=n(),M=l(),S=r=>{E?.(r),C&&f&&M({items:[{src:f,type:"IMAGE"}]})};c((()=>{if(f&&(P.current?.complete||(L.status="loading"),h&&P.current))return G(P.current,((r,o)=>{o&&(r.setAttribute("src",r.dataset.src||""),I(r))})),()=>{P.current&&I(P.current)}}),[f]),A[h?"data-src":"src"]=f;const $="loading"===L.status?v:void 0;return r("div",{style:{width:p??$,height:p??$,...k},className:i("i-image",y,{rounded:g,[`i-image-${L.status}`]:L.status}),children:"error"===L.status?j:o(t,{children:[f&&r("img",{ref:P,style:{objectFit:b,width:F,height:F},...A,onLoad:r=>{N?.(r),L.status=void 0},onError:r=>{x?.(r),L.status="error"},onClick:S}),f&&"loading"===L.status&&r(d,{absolute:!0}),w&&r("div",{className:i("i-image-cover",z),onClick:S,children:w})]})})};export{u as default};
//# sourceMappingURL=image.js.map
