{"version":3,"file":"useModal.js","sources":["../../../packages/components/modal/useModal.tsx"],"sourcesContent":["import { renderNode } from \"@p/js/utils\";\nimport { useRef } from \"react\";\nimport HookModal from \"./hookModal\";\nimport { IModal, RefHookModal } from \"./type\";\n\nexport default function useModal() {\n\tconst ref = useRef<RefHookModal>(null);\n\n\tconst handleOpen = (props: IModal) => {\n\t\tconst unMount = renderNode(\n\t\t\t<HookModal\n\t\t\t\tref={ref}\n\t\t\t\tvisible\n\t\t\t\t{...props}\n\t\t\t\tonClose={() => {\n\t\t\t\t\tprops.onClose?.();\n\t\t\t\t\tunMount?.();\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t};\n\n\tconst handleUpdate = (props: IModal) => {\n\t\tif (!ref.current) return;\n\n\t\tconst { update } = ref.current;\n\t\tupdate(props);\n\t};\n\n\tconst handleClose = () => {\n\t\tif (!ref.current) return;\n\n\t\tconst { close } = ref.current;\n\t\tclose();\n\t};\n\n\treturn {\n\t\topen: handleOpen,\n\t\tupdate: handleUpdate,\n\t\tclose: handleClose,\n\t};\n}\n"],"names":["useModal","ref","useRef","open","props","unMount","renderNode","_jsx","HookModal","visible","onClose","update","current","close"],"mappings":"oJAKc,SAAUA,IACvB,MAAMC,EAAMC,EAAqB,MA8BjC,MAAO,CACNC,KA7BmBC,IACnB,MAAMC,EAAUC,EACfC,EAACC,GACAP,IAAKA,EACLQ,SACI,KAAAL,EACJM,QAAS,KACRN,EAAMM,YACNL,KAAW,IAGb,EAmBDM,OAhBqBP,IACrB,IAAKH,EAAIW,QAAS,OAElB,MAAMD,OAAEA,GAAWV,EAAIW,QACvBD,EAAOP,EAAM,EAabS,MAVmB,KACnB,IAAKZ,EAAIW,QAAS,OAElB,MAAMC,MAAEA,GAAUZ,EAAIW,QACtBC,GAAO,EAQT"}