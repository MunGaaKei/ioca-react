{"version":3,"file":"upload.js","sources":["../../../packages/components/upload/upload.tsx"],"sourcesContent":["import { PlusSharp } from \"@ricons/material\";\nimport { useReactive } from \"ahooks\";\nimport classNames from \"classnames\";\nimport { uid } from \"radash\";\nimport {\n\tChangeEvent,\n\tCSSProperties,\n\tuseEffect,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseRef,\n} from \"react\";\nimport { SortableItem } from \"react-easy-sort\";\nimport usePreview from \"../../js/usePreview\";\nimport { TPreviewItem } from \"../../js/usePreview/type\";\nimport { arrayMove } from \"../../js/utils\";\nimport Button from \"../button\";\nimport Icon from \"../icon\";\nimport InputContainer from \"../input/container\";\nimport \"./index.css\";\nimport FileListItem, { ListContainer } from \"./renderFile\";\nimport { IFile, IUpload } from \"./type\";\n\nconst Upload = (props: IUpload) => {\n\tconst {\n\t\tref,\n\t\tlabel,\n\t\tlabelInline,\n\t\tvalue,\n\t\tfiles = [],\n\t\tinitialFiles,\n\t\tplaceholder,\n\t\tstatus = \"normal\",\n\t\tmessage,\n\t\tclassName,\n\t\tstyle,\n\t\tchildren,\n\t\tdefaultText = \"Upload\",\n\t\tmode = \"default\",\n\t\tcardSize = \"4em\",\n\t\tdisabled,\n\t\tsortable,\n\t\tlimit = props.multiple ? Infinity : 1,\n\t\tmultiple,\n\t\trenderItem,\n\t\tshouldUpload = () => true,\n\t\tuploader,\n\t\tonChange,\n\t\tonFilesChange,\n\t\tonUpload,\n\t\t...restProps\n\t} = props;\n\n\tconst state = useReactive({\n\t\tfiles,\n\t\tvalue,\n\t\tstatus,\n\t\tmessage,\n\t});\n\tconst inputRef = useRef<HTMLInputElement>(null);\n\tconst preview = usePreview();\n\n\tconst trigger = useMemo(() => {\n\t\tif (children) return children;\n\n\t\tswitch (mode) {\n\t\t\tcase \"card\":\n\t\t\t\treturn (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName='i-upload-card-btn color-5'\n\t\t\t\t\t\tsquare\n\t\t\t\t\t\tflat\n\t\t\t\t\t\toutline\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon icon={<PlusSharp />} />\n\t\t\t\t\t</Button>\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn (\n\t\t\t\t\t<Button className='i-upload-btn' disabled={disabled}>\n\t\t\t\t\t\t{defaultText}\n\t\t\t\t\t</Button>\n\t\t\t\t);\n\t\t}\n\t}, [mode, children]);\n\n\tconst handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tconst files = Array.from(e.target.files || []) as IFile[];\n\t\tconst { files: before } = state;\n\t\tconst changed: IFile[] = [];\n\n\t\tfiles.map((f) => {\n\t\t\tconst { id, name, size, type } = f;\n\t\t\tconst same = before.find((pf) => {\n\t\t\t\tconst { name: n, size: s, type: t } = pf;\n\t\t\t\treturn n === name && s === size && t === type;\n\t\t\t});\n\t\t\tconst src = URL.createObjectURL(f);\n\n\t\t\tObject.assign(f, {\n\t\t\t\tid: id ?? uid(7),\n\t\t\t\tsrc: src ?? f.name,\n\t\t\t\turl: src ?? f.name,\n\t\t\t});\n\t\t\t!same && changed.push(f);\n\t\t});\n\n\t\tconst after = [...before, ...changed];\n\n\t\tObject.assign(state, {\n\t\t\tfiles: multiple ? after.slice(0, limit) : [after.at(-1)],\n\t\t\tstatus,\n\t\t\tmessage,\n\t\t});\n\n\t\tonFilesChange?.(state.files, changed, e);\n\t\tonChange?.(state.files, e);\n\n\t\thandleUpload(changed);\n\t\tinputRef.current && (inputRef.current.value = \"\");\n\t};\n\n\tconst handleRemove = (i: number) => {\n\t\tconst [...files] = state.files;\n\n\t\tconst changed = files.splice(i, 1);\n\t\tURL.revokeObjectURL(changed[0]?.src || \"\");\n\n\t\tstate.files = files;\n\t\tonFilesChange?.(files, changed);\n\t\tonChange?.(files);\n\n\t\tinputRef.current && (inputRef.current.value = \"\");\n\t};\n\n\tconst handleUpload = async (files: IFile[]) => {\n\t\tif (!uploader) return;\n\n\t\tconst shouldUploadFiles = files.filter(shouldUpload);\n\n\t\tconst result = Promise.all(shouldUploadFiles.map(uploader));\n\n\t\treturn onUpload?.(result);\n\t};\n\n\tconst handlePreview = (i: number) => {\n\t\tpreview({ items: state.files as TPreviewItem[], initial: i });\n\t};\n\n\tconst setFileList = (files?: IFile[] | File[]) => {\n\t\tif (!files) return;\n\n\t\tstate.files = files.map((f) => {\n\t\t\treturn { ...f, id: f.id ?? uid(7) };\n\t\t});\n\t};\n\n\tconst handleSortEnd = (before, after) => {\n\t\tconst [...files] = state.files;\n\n\t\tstate.files = arrayMove(files, before, after);\n\t\tonChange?.(state.files);\n\t};\n\n\tuseEffect(() => {\n\t\tObject.assign(state, {\n\t\t\tstatus,\n\t\t\tmessage,\n\t\t});\n\t}, [status, message]);\n\n\tuseEffect(() => {\n\t\tstate.files = value?.filter?.((file) => !!file.id) ?? [];\n\t}, [value]);\n\n\tuseEffect(() => {\n\t\tsetFileList(initialFiles);\n\t}, []);\n\n\tuseImperativeHandle(\n\t\tref,\n\t\t() => ({\n\t\t\tgetFileList: () => state.files,\n\n\t\t\tsetFileList,\n\t\t}),\n\t\t[]\n\t);\n\n\treturn (\n\t\t<InputContainer\n\t\t\tas='div'\n\t\t\tlabel={label}\n\t\t\tlabelInline={labelInline}\n\t\t\tclassName={classNames(\"i-input-label-file\", className)}\n\t\t\tstyle={style}\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName={classNames(\"i-upload-inner\", {\n\t\t\t\t\t[`i-upload-${mode}`]: mode !== \"default\",\n\t\t\t\t})}\n\t\t\t\tstyle={{ [\"--upload-card-size\"]: cardSize } as CSSProperties}\n\t\t\t>\n\t\t\t\t<ListContainer sortable={sortable} onSortEnd={handleSortEnd}>\n\t\t\t\t\t{state.files.map((file: IFile, i: number) => {\n\t\t\t\t\t\tconst node = (\n\t\t\t\t\t\t\t<FileListItem\n\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\tindex={i}\n\t\t\t\t\t\t\t\tfile={file}\n\t\t\t\t\t\t\t\tmode={mode}\n\t\t\t\t\t\t\t\trenderItem={renderItem}\n\t\t\t\t\t\t\t\tonRemove={handleRemove}\n\t\t\t\t\t\t\t\tonPreview={handlePreview}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (!sortable) return node;\n\n\t\t\t\t\t\treturn <SortableItem key={i}>{node}</SortableItem>;\n\t\t\t\t\t})}\n\t\t\t\t</ListContainer>\n\n\t\t\t\t{state.message && (\n\t\t\t\t\t<span className='i-upload-message'>{state.message}</span>\n\t\t\t\t)}\n\n\t\t\t\t{state.files.length < limit && (\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t{...restProps}\n\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\tref={inputRef}\n\t\t\t\t\t\t\ttype='file'\n\t\t\t\t\t\t\tclassName='i-input-file-hidden'\n\t\t\t\t\t\t\tmultiple={multiple}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{trigger}\n\t\t\t\t\t</label>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</InputContainer>\n\t);\n};\n\nexport default Upload;\n"],"names":["Upload","props","ref","label","labelInline","value","files","initialFiles","placeholder","status","message","className","style","children","defaultText","mode","cardSize","disabled","sortable","limit","multiple","Infinity","renderItem","shouldUpload","uploader","onChange","onFilesChange","onUpload","restProps","state","useReactive","inputRef","useRef","preview","usePreview","trigger","useMemo","_jsx","Button","square","flat","outline","Icon","icon","PlusSharp","handleRemove","i","changed","splice","URL","revokeObjectURL","src","current","handleUpload","async","shouldUploadFiles","filter","result","Promise","all","map","handlePreview","items","initial","setFileList","f","id","uid","useEffect","Object","assign","file","useImperativeHandle","getFileList","InputContainer","as","classNames","_jsxs","ListContainer","onSortEnd","before","after","arrayMove","node","FileListItem","index","onRemove","onPreview","SortableItem","length","type","e","Array","from","target","name","size","same","find","pf","n","s","t","createObjectURL","url","push","slice","at"],"mappings":"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"}