import{jsx as e,jsxs as s}from"react/jsx-runtime";import{arrayMove as i}from"../../js/utils.js";import l from"../../js/usePreview/index.js";import{PlusSharp as t}from"@ricons/material";import{useReactive as a}from"ahooks";import r from"classnames";import{uid as n}from"radash";import{useRef as o,useMemo as m,useEffect as d,useImperativeHandle as c}from"react";import{SortableItem as f}from"react-easy-sort";import"../button/index.js";import u from"../icon/icon.js";import p from"../input/container.js";import b,{ListContainer as h}from"./renderFile.js";import g from"../button/button.js";const j=j=>{const{ref:v,label:y,labelInline:N,value:U,files:x=[],initialFiles:L,placeholder:F,status:O="normal",message:R,className:z,style:I,children:C,defaultText:P="Upload",mode:k="default",cardSize:w="4em",disabled:S,sortable:q,limit:A=(j.multiple?1/0:1),multiple:E,renderItem:T,shouldUpload:$=()=>!0,uploader:B,onChange:D,onFilesChange:G,onUpload:H,...J}=j,K=a({files:x,value:U,status:O,message:R}),M=o(null),Q=l(),V=m((()=>C||e(g,"card"===k?{className:"i-upload-card-btn color-5",square:!0,flat:!0,outline:!0,disabled:S,children:e(u,{icon:e(t,{})})}:{className:"i-upload-btn",disabled:S,children:P})),[k,C]),W=e=>{const[...s]=K.files,i=s.splice(e,1);URL.revokeObjectURL(i[0]?.src||""),K.files=s,G?.(s,i),D?.(s),M.current&&(M.current.value="")},X=async e=>{if(!B)return;const s=e.filter($),i=Promise.all(s.map(B));return H?.(i)},Y=e=>{Q({items:K.files,initial:e})},Z=e=>{e&&(K.files=e.map((e=>({...e,id:e.id??n(7)}))))};return d((()=>{Object.assign(K,{status:O,message:R})}),[O,R]),d((()=>{K.files=U?.filter?.((e=>!!e.id))??[]}),[U]),d((()=>{Z(L)}),[]),c(v,(()=>({getFileList:()=>K.files,setFileList:Z})),[]),e(p,{as:"div",label:y,labelInline:N,className:r("i-input-label-file",z),style:I,children:s("div",{className:r("i-upload-inner",{[`i-upload-${k}`]:"default"!==k}),style:{"--upload-card-size":w},children:[e(h,{sortable:q,onSortEnd:(e,s)=>{const[...l]=K.files;K.files=i(l,e,s),D?.(K.files)},children:K.files.map(((s,i)=>{const l=e(b,{index:i,file:s,mode:k,renderItem:T,onRemove:W,onPreview:Y},i);return q?e(f,{children:l},i):l}))}),K.message&&e("span",{className:"i-upload-message",children:K.message}),K.files.length<A&&s("label",{children:[e("input",{...J,disabled:S,ref:M,type:"file",className:"i-input-file-hidden",multiple:E,onChange:e=>{const s=Array.from(e.target.files||[]),{files:i}=K,l=[];s.map((e=>{const{id:s,name:t,size:a,type:r}=e,o=i.find((e=>{const{name:s,size:i,type:l}=e;return s===t&&i===a&&l===r})),m=URL.createObjectURL(e);Object.assign(e,{id:s??n(7),src:m??e.name,url:m??e.name}),!o&&l.push(e)}));const t=[...i,...l];Object.assign(K,{files:E?t.slice(0,A):[t.at(-1)],status:O,message:R}),G?.(K.files,l,e),D?.(K.files,e),X(l),M.current&&(M.current.value="")}}),V]})]})})};export{j as default};
//# sourceMappingURL=upload.js.map
