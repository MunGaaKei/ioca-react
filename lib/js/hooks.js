import{useEffect as e}from"react";const n=new Set,t=new Set,o=new Set,s="ontouchend"in document,c={MOVE:s?"touchmove":"mousemove",UP:s?"touchend":"mouseup",KEYDOWN:"keydown"};function r(t,o){e((()=>(n.add(t),()=>{n.delete(t)})),[t])}function u(n,o){e((()=>(t.add(n),()=>{t.delete(n)})),[n])}function d(n,t){e((()=>{if(!t?.disabled)return o.add(n),()=>{o.delete(n)}}),[n])}function i(e){const n=new WeakMap,t=new IntersectionObserver((e=>{e.map((e=>{const t=n.get(e.target);t?.(e.target,e.isIntersecting)}))}),e);return{observe:function(e,o){n.get(e)||(n.set(e,o),e&&t.observe(e))},unobserve:function(e){e&&t.unobserve(e),n.delete(e)},disconnect:function(){t.disconnect()}}}function a(){const e=new WeakMap,n=new ResizeObserver((n=>{n.map((n=>{const t=e.get(n.target);t?.(n.target)}))}));return{observe:function(t,o){e.get(t)||(t&&n.observe(t),e.set(t,o))},unobserve:function(t){t&&n.unobserve(t),e.delete(t)},disconnect:function(){n.disconnect()}}}document.addEventListener(c.MOVE,(e=>{for(const t of n.values())t(e)}),{passive:!1}),document.addEventListener(c.UP,(e=>{for(const n of t.values())n(e)})),document.addEventListener(c.KEYDOWN,(e=>{for(const n of o.values())n(e)}));export{i as useIntersectionObserver,d as useKeydown,r as useMouseMove,u as useMouseUp,a as useResizeObserver};
//# sourceMappingURL=hooks.js.map
