{"version":3,"file":"hookModal.js","sources":["../../../../packages/components/modal/hookModal.tsx"],"sourcesContent":["import { useReactive } from \"ahooks\";\nimport type { RefObject } from \"react\";\nimport { useImperativeHandle } from \"react\";\nimport Modal from \"./modal\";\nimport type { IModal, RefHookModal } from \"./type\";\n\nconst HookModal = (\n\tprops: IModal & { ref?: RefObject<RefHookModal | null> }\n) => {\n\tconst { ref } = props;\n\tconst state = useReactive<IModal>({});\n\n\tconst mergedProps = Object.assign({}, props, state);\n\n\tuseImperativeHandle(ref, () => ({\n\t\tupdate: (config: IModal = {}) => {\n\t\t\tObject.assign(state, config);\n\t\t},\n\n\t\tclose: () => {\n\t\t\tstate.visible = false;\n\n\t\t\tif (mergedProps.closable) return;\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tstate.visible = true;\n\t\t\t});\n\t\t},\n\t}));\n\n\treturn <Modal {...mergedProps} />;\n};\n\nexport default HookModal;\n"],"names":["_jsx"],"mappings":";;;;;AAMA,MAAM,SAAS,GAAG,CACjB,KAAwD,KACrD;AACH,IAAA,MAAM,EAAE,GAAG,EAAE,GAAG,KAAK;AACrB,IAAA,MAAM,KAAK,GAAG,WAAW,CAAS,EAAE,CAAC;AAErC,IAAA,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC;AAEnD,IAAA,mBAAmB,CAAC,GAAG,EAAE,OAAO;AAC/B,QAAA,MAAM,EAAE,CAAC,MAAiB,GAAA,EAAE,KAAI;AAC/B,YAAA,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC;SAC5B;QAED,KAAK,EAAE,MAAK;AACX,YAAA,KAAK,CAAC,OAAO,GAAG,KAAK;YAErB,IAAI,WAAW,CAAC,QAAQ;gBAAE;AAC1B,YAAA,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,MAAK;AAC3B,gBAAA,KAAK,CAAC,OAAO,GAAG,IAAI;AACrB,aAAC,CAAC;SACF;AACD,KAAA,CAAC,CAAC;AAEH,IAAA,OAAOA,GAAC,CAAA,KAAK,EAAK,EAAA,GAAA,WAAW,GAAI;AAClC;;;;"}