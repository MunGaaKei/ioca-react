{"version":3,"file":"useModal.js","sources":["../../../../packages/components/modal/useModal.tsx"],"sourcesContent":["import { useRef } from \"react\";\nimport { renderNode } from \"../../js/utils\";\nimport HookModal from \"./hookModal\";\nimport { IModal, RefHookModal } from \"./type\";\n\nexport default function useModal() {\n\tconst ref = useRef<RefHookModal>(null);\n\n\tconst handleOpen = (props: IModal) => {\n\t\tconst unMount = renderNode(\n\t\t\t<HookModal\n\t\t\t\tref={ref}\n\t\t\t\tvisible\n\t\t\t\t{...props}\n\t\t\t\tonClose={() => {\n\t\t\t\t\tprops.onClose?.();\n\t\t\t\t\tunMount?.();\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t};\n\n\tconst handleUpdate = (props: IModal) => {\n\t\tif (!ref.current) return;\n\n\t\tconst { update } = ref.current;\n\t\tupdate(props);\n\t};\n\n\tconst handleClose = () => {\n\t\tif (!ref.current) return;\n\n\t\tconst { close } = ref.current;\n\t\tclose();\n\t};\n\n\treturn {\n\t\topen: handleOpen,\n\t\tupdate: handleUpdate,\n\t\tclose: handleClose,\n\t};\n}\n"],"names":["useRef","renderNode","_jsx","HookModal"],"mappings":";;;;;;;;;AAKc,SAAU,QAAQ,GAAA;AAC/B,IAAA,MAAM,GAAG,GAAGA,YAAM,CAAe,IAAI,CAAC;AAEtC,IAAA,MAAM,UAAU,GAAG,CAAC,KAAa,KAAI;AACpC,QAAA,MAAM,OAAO,GAAGC,gBAAU,CACzBC,cAAC,CAAAC,iBAAS,IACT,GAAG,EAAE,GAAG,EACR,OAAO,EACH,IAAA,EAAA,GAAA,KAAK,EACT,OAAO,EAAE,MAAK;AACb,gBAAA,KAAK,CAAC,OAAO,IAAI;gBACjB,OAAO,IAAI;aACX,EAAA,CACA,CACF;AACF,KAAC;AAED,IAAA,MAAM,YAAY,GAAG,CAAC,KAAa,KAAI;QACtC,IAAI,CAAC,GAAG,CAAC,OAAO;YAAE;AAElB,QAAA,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,OAAO;QAC9B,MAAM,CAAC,KAAK,CAAC;AACd,KAAC;IAED,MAAM,WAAW,GAAG,MAAK;QACxB,IAAI,CAAC,GAAG,CAAC,OAAO;YAAE;AAElB,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC,OAAO;AAC7B,QAAA,KAAK,EAAE;AACR,KAAC;IAED,OAAO;AACN,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,MAAM,EAAE,YAAY;AACpB,QAAA,KAAK,EAAE,WAAW;KAClB;AACF;;;;"}