{"version":3,"file":"hookModal.js","sources":["../../../../packages/components/modal/hookModal.tsx"],"sourcesContent":["import { useReactive } from \"ahooks\";\r\nimport type { RefObject } from \"react\";\r\nimport { useImperativeHandle } from \"react\";\r\nimport Modal from \"./modal\";\r\nimport type { IModal, RefHookModal } from \"./type\";\r\n\r\nconst HookModal = (\r\n\tprops: IModal & { ref?: RefObject<RefHookModal | null> }\r\n) => {\r\n\tconst { ref, ...restProps } = props;\r\n\tconst state = useReactive<IModal>({});\r\n\r\n\tconst mergedProps = Object.assign({}, restProps, state);\r\n\r\n\tuseImperativeHandle(ref, () => ({\r\n\t\tupdate: (config: IModal = {}) => {\r\n\t\t\tObject.assign(state, config);\r\n\t\t},\r\n\r\n\t\tclose: () => {\r\n\t\t\tstate.visible = false;\r\n\r\n\t\t\tif (mergedProps.closable) return;\r\n\t\t\tPromise.resolve().then(() => {\r\n\t\t\t\tstate.visible = true;\r\n\t\t\t});\r\n\t\t},\r\n\t}));\r\n\r\n\treturn <Modal {...mergedProps} />;\r\n};\r\n\r\nexport default HookModal;\r\n"],"names":["useReactive","useImperativeHandle","_jsx","Modal"],"mappings":";;;;;;;;;AAMA,MAAM,SAAS,GAAG,CACjB,KAAwD,KACrD;IACH,MAAM,EAAE,GAAG,EAAE,GAAG,SAAS,EAAE,GAAG,KAAK;AACnC,IAAA,MAAM,KAAK,GAAGA,kBAAW,CAAS,EAAE,CAAC;AAErC,IAAA,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC;AAEvD,IAAAC,yBAAmB,CAAC,GAAG,EAAE,OAAO;AAC/B,QAAA,MAAM,EAAE,CAAC,MAAiB,GAAA,EAAE,KAAI;AAC/B,YAAA,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC;SAC5B;QAED,KAAK,EAAE,MAAK;AACX,YAAA,KAAK,CAAC,OAAO,GAAG,KAAK;YAErB,IAAI,WAAW,CAAC,QAAQ;gBAAE;AAC1B,YAAA,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,MAAK;AAC3B,gBAAA,KAAK,CAAC,OAAO,GAAG,IAAI;AACrB,aAAC,CAAC;SACF;AACD,KAAA,CAAC,CAAC;AAEH,IAAA,OAAOC,cAAC,CAAAC,aAAK,EAAK,EAAA,GAAA,WAAW,GAAI;AAClC;;;;"}